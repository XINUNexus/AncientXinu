_mkinit	mark.c	?^_mkinit()$?
clkinit	clkinit.c	?^clkinit()$?
close	close.c	?^close(descrp)$?
control	control.c	?^control(descrp, func, addr, addr2)$?
create	create.c	?^SYSCALL create(procaddr,ssize,priority,name,nargs,?
dequeue	queue.c	?^int	dequeue(item)$?
dfalloc	dfalloc.c	?^dfalloc()$?
dfckmd	dfckmd.c	?^dfckmd(mode)$?
dfdsrch	dfdsrch.c	?^dfdsrch(dsptr, filenam, mbits)$?
disable	pscfuncts.c	?^disable()$?
dotrace	dotrace.c	?^int	dotrace(procname, argv, argc)$?
dscntl	dscntl.c	?^dscntl(devptr, func)$?
dscopy	dscopy.c	?^dscopy(from, to, length)$?
dsinit	dsinit.c	?^dsinit(devptr)$?
dsinter	dsinter.c	?^INTPROC	dsinter(dsptr)$?
dskbcpy	dskbcpy.c	?^dskbcpy(oldbuf)$?
dskenq	dskenq.c	?^dskenq(drptr, dsptr)$?
dskqopt	dskqopt.c	?^dskqopt(p, q, drptr)$?
dskstrt	dskstrt.c	?^dskstrt(dsptr)$?
dsksync	dsksync.c	?^dsksync(devptr)$?
dsopen	dsopen.c	?^dsopen(devptr, filenam, mode)$?
dsread	dsread.c	?^dsread(devptr, buff, block)$?
dsseek	dsseek.c	?^dsseek(devptr, block)$?
dswrite	dswrite.c	?^dswrite(devptr, buff, block)$?
duapp	dutil.c	?^duapp(diskdev, from, to)$?
ducreat	dutil.c	?^ducreat(diskdev, name)$?
dudir	dudir.c	?^dudir(diskdev)$?
duexec	dutil.c	?^duexec(diskdir, name)$?
dufreeze	dutil.c	?^dufreeze(diskdev, name)$?
duhelp	dutil.c	?^duhelp()$?
duiblk	dutil.c	?^duiblk(diskdev, arg)$?
duinit	dutil.c	?^duinit(drive)$?
dumkdl	dumkfs.c	?^dumkdl(diskdev, firstfb, lastfb, verbose)$?
dumkfs	dumkfs.c	?^dumkfs(diskdev, niblks, nblocks, diskid, verbose)$?
dumkil	dumkfs.c	?^dumkil(diskdev, niblks, verbose)$?
duname	dutil.c	?^duname(diskdev, fname, tname)$?
dupmkfs	dutil.c	?^dupmkfs(diskdev)$?
duquit	dutil.c	?^duquit()$?
duread	dutil.c	?^duread(diskdev, fname)$?
dusize	dutil.c	?^dusize()$?
dutil	dutil.c	?^dutil()$?
dutrace	dutil.c	?^dutrace(diskdev, fname)$?
duverbose	dutil.c	?^duverbose(arg)$?
duwrite	dutil.c	?^duwrite(diskdev, fname)$?
duzap	dutil.c	?^duzap(diskdev, fname)$?
echoch	ttyiin.c	?^LOCAL echoch(ch, ttyp, cptr)$?
enable	../h/kernel.h	?^#define	enable()	asm("mtps $000")/* enable interru?
enqueue	queue.c	?^int	enqueue(item, tail)$?
eputc	ttyiin.c	?^LOCAL eputc(ch,ttyp,cptr)$?
erase1	ttyiin.c	?^LOCAL erase1(ttyp,cptr)$?
fgetc	../h/io.h	?^#define	fgetc(unit)	getc((unit))$?
firstid	../h/q.h	?^#define firstid(list)	(q[(list)].qnext)$?
firstkey	../h/q.h	?^#define	firstkey(list)	(q[q[(list)].qnext].qkey)$?
fputc	../h/io.h	?^#define	fputc(unit,ch)	putc((unit),(ch))$?
freebuf	freebuf.c	?^freebuf(buf)$?
freemem	freemem.c	?^SYSCALL	freemem(block, size)$?
freestk	../h/mem.h	?^#define freestk(p,len)	freemem((unsigned)(p)			\\$?
getbuf	getbuf.c	?^getbuf(poolid)$?
getc	getc.c	?^getc(descrp)$?
getchar	../h/io.h	?^#define	getchar()	getc(CONSOLE)$?
getcmd	dutil.c	?^getcmd()$?
getfirst	getitem.c	?^int	getfirst(head)$?
getlast	getitem.c	?^int	getlast(tail)$?
getmem	getmem.c	?^WORD	*getmem(nbytes)$?
getpid	getpid.c	?^SYSCALL getpid()$?
getstk	getstk.c	?^WORD	*getstk(nbytes)$?
halt	../h/kernel.h	?^#define	halt()		asm("halt")	/* machine halt	instru?
ibclear	ibclear.c	?^ibclear(ibptr, ibbyte)$?
ibfree	ibfree.c	?^ibfree(diskdev, inum)$?
ibget	ibget.c	?^ibget(diskdev, inum, loc)$?
iblfree	iblfree.c	?^iblfree(diskdev, iblist)$?
ibnew	ibnew.c	?^ibnew(diskdev, writedir)$?
ibput	ibput.c	?^ibput(diskdev, inum, loc)$?
inchar	dutil.c	?^LOCAL	inchar(dev)$?
init	init.c	?^init(descrp)$?
insert	insert.c	?^int	insert(proc, head, key)$?
insertd	insertd.c	?^insertd(pid, head, key)$?
ioerr	ioerr.c	?^ioerr()$?
ionull	ionull.c	?^ionull()$?
iosetvec	iosetvec.c	?^iosetvec(descrp, incode, outcode)$?
isbaddev	../h/io.h	?^#define	isbaddev(f)	( (f)<0 || (f)>=NDEVS )$?
isbadpid	../h/proc.h	?^#define	isbadpid(x)	(x<=0 || x>=NPROC)$?
isbadport	../h/ports.h	?^#define	isbadport(pid)	( (pid)<0 || (pid)>=NPORTS ?
isbadsem	../h/sem.h	?^#define	isbadsem(s)	(s<0 || s>=NSEM)$?
isempty	../h/q.h	?^#define	isempty(list)	(q[(list)].qnext >= NPROC)$?
isodd	../h/kernel.h	?^#define	isodd(x)	(01&(WORD)(x))$?
kgetc	kpollio.c	?^char	$?
kill	kill.c	?^SYSCALL kill(pid)$?
kprintf	kpollio.c	?^int	kprintf(fmt, args)$?
kputc	kpollio.c	?^int	kputc(device, c)$?
lastkey	../h/q.h	?^#define lastkey(tail)	(q[q[(tail)].qprev].qkey)$?
lfclose	lfclose.c	?^lfclose(devptr)$?
lfgetc	lfgetc.c	?^lfgetc(devptr)$?
lfinit	lfinit.c	?^lfinit(devptr)$?
lfputc	lfputc.c	?^lfputc(devptr, ch)$?
lfread	lfread.c	?^lfread(devptr, buff, count)$?
lfsdfree	lfsdfree.c	?^lfsdfree(diskdev, dba)$?
lfseek	lfseek.c	?^lfseek(devptr, offset)$?
lfsetup	lfsetup.c	?^lfsetup(diskdev, flptr)$?
lfsflush	lfsflush.c	?^lfsflush(flptr)$?
lfsnewd	lfsnewd.c	?^lfsnewd(diskdev, flptr)$?
lfwrite	lfwrite.c	?^lfwrite(devptr, buff, count)$?
lookup	dutil.c	?^LOCAL	lookup(len)$?
mark	mark.c	?^mark(loc)$?
mdump	mdump.c	?^mdump()$?
mdumph	mdump.c	?^mdumph()$?
mkpool	mkpool.c	?^mkpool(bufsiz, numbufs)$?
newpid	create.c	?^LOCAL	newpid()$?
newqueue	newqueue.c	?^int	newqueue(hindex,tindex)$?
newsem	screate.c	?^LOCAL	newsem()$?
nonempty	../h/q.h	?^#define	nonempty(list)	(q[(list)].qnext < NPROC)$?
nulluser	initialize.c	?^nulluser()				/* babysit CPU when no one home */$?
open	open.c	?^open(descrp, nam, mode)$?
parse	dutil.c	?^LOCAL	parse()$?
pause	../h/kernel.h	?^#define	pause()		asm("wait")	/* machine "wait for ?
poolinit	poolinit.c	?^poolinit()$?
putc	putc.c	?^putc(descrp, ch)$?
putchar	../h/io.h	?^#define	putchar(ch)	putc(CONSOLE,(ch))$?
read	read.c	?^read(descrp, buff, count)$?
readcopy	ttyread.c	?^LOCAL readcopy(buff,ttyp,count)$?
ready	ready.c	?^int	ready (pid, resch)$?
realcsr	../h/slu.h	?^#define	realcsr(devptr)		(struct csr *) (devptr->d?
receive	receive.c	?^SYSCALL	receive()$?
recvclr	recvclr.c	?^SYSCALL	recvclr()$?
resched	resched.c	?^int	resched()$?
restore	pscfuncts.c	?^restore()$?
resume	resume.c	?^SYSCALL resume(pid)$?
roundew	../h/mem.h	?^#define	roundew(x)	(WORD *)( (3 + (WORD)(x)) & ~03?
scount	scount.c	?^SYSCALL scount(sem)$?
screate	screate.c	?^SYSCALL screate(count)$?
sdelete	sdelete.c	?^SYSCALL sdelete(sem)$?
seek	seek.c	?^seek(descrp, pos)$?
send	send.c	?^SYSCALL	send(pid, msg)$?
sendf	sendf.c	?^SYSCALL	sendf(pid, msg)$?
signal	signal.c	?^SYSCALL signal(sem)$?
signaln	signaln.c	?^SYSCALL signaln(sem,count)$?
sizeup	dutil.c	?^LOCAL	sizeup(diskdev)$?
sleep	sleep.c	?^SYSCALL	sleep(n)$?
sleep10	sleep10.c	?^SYSCALL	sleep10(n)$?
slugetch	../h/slu.h	?^#define slugetch(ioaddr)	(ioaddr)->crbuf$?
slugetcher	../h/slu.h	?^#define slugetcher(ioaddr)	(ioaddr)->crbuf$?
sluinit	sluinit.c	?^int	sluinit(devptr, ttyp)$?
sluint	sluint.c	?^INTPROC	sluint(ttyp)$?
sluputch	../h/slu.h	?^#define sluputch(ioaddr, ch)	(ioaddr)->ctbuf = (ch?
slurdisable	../h/slu.h	?^#define slurdisable(ioaddr, x)	(ioaddr)->crstat &=?
slurenable	../h/slu.h	?^#define slurenable(ioaddr, x)	(ioaddr)->crstat |= ?
slurstbrk	../h/slu.h	?^#define slurstbrk(ioaddr)	(ioaddr)->ctstat &= ~SLU?
slusetbrk	../h/slu.h	?^#define slusetbrk(ioaddr)	(ioaddr)->ctstat |= SLUT?
slutdisable	../h/slu.h	?^#define slutdisable(ioaddr, x)	(ioaddr)->ctstat &=?
slutenable	../h/slu.h	?^#define slutenable(ioaddr, x)	(ioaddr)->ctstat |= ?
sreset	sreset.c	?^SYSCALL sreset(sem,count)$?
stopclk	ssclock.c	?^stopclk()$?
strtclk	ssclock.c	?^strtclk()$?
suspend	suspend.c	?^SYSCALL	suspend(pid)$?
sysinit	initialize.c	?^LOCAL	sysinit()$?
truncew	../h/mem.h	?^#define	truncew(x)	(WORD *)( ((WORD)(x)) & ~03 )$?
ttycntl	ttycntl.c	?^ttycntl(devptr, func, addr)$?
ttygetc	ttygetc.c	?^ttygetc(devptr)$?
ttyiin	ttyiin.c	?^INTPROC	ttyiin(ttyp, cptr, error)$?
ttyinit	ttyinit.c	?^ttyinit(devptr)$?
ttyoin	ttyoin.c	?^ttyoin(ttyp, cptr)$?
ttyputc	ttyputc.c	?^ttyputc(devptr, ch )$?
ttyread	ttyread.c	?^ttyread(devptr, buff, count)$?
ttywrite	ttywrite.c	?^ttywrite(devptr, buff, count)$?
userret	userret.c	?^userret()$?
wait	wait.c	?^SYSCALL	wait(sem)$?
wakeup	wakeup.c	?^INTPROC	wakeup()$?
writcopy	ttywrite.c	?^LOCAL writcopy(buff, ttyp, count)$?
write	write.c	?^write(descrp, buff, count)$?
xdone	xdone.c	?^xdone()$?
